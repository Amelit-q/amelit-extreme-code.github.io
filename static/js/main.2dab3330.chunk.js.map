{"version":3,"sources":["components/Toolbar/Toolbar.tsx","components/ToolbarButton/ToolbarButton.tsx","components/ConversationSearch/ConversationSearch.tsx","components/ConversationListItem/ConversationListItem.tsx","components/ConversationList/ConversationsList.tsx","components/Message/Message.tsx","components/Compose/Compose.tsx","components/MessageList/MessageList.tsx","components/Messenger/Messenger.tsx","pages/Registration/Registration.tsx","components/App/App.tsx","index.tsx"],"names":["Toolbar","props","title","leftItems","rightItems","className","ToolbarButton","icon","ConversationSearch","type","placeholder","ConversationListItem","useEffect","shave","data","photo","name","text","src","alt","ConversationsList","useState","conversations","setConversations","getConversations","axios","get","then","response","newConversations","results","map","result","picture","large","first","last","conversation","Message","isMine","startsSequence","endsSequence","showTimestamp","friendlyTimestamp","moment","timestamp","format","join","message","Compose","MessageList","messages","setMessages","getMessages","tempMessages","id","author","Date","getTime","i","messageCount","length","previous","current","next","currentMoment","previousMoment","previousDuration","duration","diff","as","nextMoment","nextDuration","push","renderMessages","Messenger","Registration","observer","React","phoneNumber","setPhoneNumber","email","setEmail","setName","password","setPassword","registrationFormFields","setRegistrationFormFields","onSubmit","event","preventDefault","value","onChange","target","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2dab3330.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./Toolbar.css\"\n\nexport const Toolbar = (props: any) => {\n    const {title, leftItems, rightItems} = props\n    return (\n        <div className=\"toolbar\">\n            <div className=\"left-items\">{leftItems}</div>\n            <h1 className=\"toolbar-title\">{title}</h1>\n            <div className=\"right-items\">{rightItems}</div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport \"./ToolbarButton.css\";\n\n// @ts-ignore\nexport const ToolbarButton = ({ icon }) => {\n  \n  return <i className={`toolbar-button ${icon}`} />;\n};\n","import React from \"react\";\nimport \"./ConversationSearch.css\";\n\nexport const ConversationSearch = () => {\n  return (\n    <div className=\"conversation-search\">\n      <input\n        type=\"search\"\n        className=\"conversation-search-input\"\n        placeholder=\"Search Messages\"\n      />\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport shave from \"shave\";\n\nimport \"./ConversationListItem.css\";\n\nexport const ConversationListItem = (props: any) => {\n  useEffect(() => {\n    shave(\".conversation-snippet\", 20);\n  });\n\n  const { photo, name, text } = props.data;\n\n  return (\n    <div className=\"conversation-list-item\">\n      <img className=\"conversation-photo\" src={photo} alt=\"conversation\" />\n      <div className=\"conversation-info\">\n        <h1 className=\"conversation-title\">{name}</h1>\n        <p className=\"conversation-snippet\">{text}</p>\n      </div>\n    </div>\n  );\n};\n","import React, {useEffect, useState} from \"react\"\nimport {Toolbar} from \"../Toolbar/Toolbar\"\nimport {ToolbarButton} from \"../ToolbarButton/ToolbarButton\"\nimport {ConversationSearch} from \"../ConversationSearch/ConversationSearch\"\nimport axios from \"axios\"\n\nimport \"./ConversationList.css\"\nimport {ConversationListItem} from \"../ConversationListItem/ConversationListItem\"\n\nexport const ConversationsList = (props: any) => {\n    const [conversations, setConversations] = useState([])\n    useEffect(() => {\n        getConversations()\n    })\n\n    const getConversations = () => {\n        axios.get(\"https://randomuser.me/api/?results=20\").then((response) => {\n            let newConversations = response.data.results.map((result: any) => {\n                return {\n                    photo: result.picture.large,\n                    name: `${result.name.first} ${result.name.last}`,\n                    text: \"Hello world! This is a long message that needs to be truncated.\",\n                }\n            })\n            // @ts-ignore\n            setConversations([...conversations, ...newConversations])\n        })\n    }\n\n\n    return (\n        <div className=\"conversation-list\">\n            <Toolbar\n                title=\"Messenger\"\n                leftItems={[<ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />]}\n                rightItems={[\n                    <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />,\n                ]}\n            />\n            <ConversationSearch />\n            {conversations.map((conversation: any) => (\n                <ConversationListItem key={conversation.name} data={conversation} />\n            ))}\n        </div>\n    )\n}\n","import React from \"react\"\nimport moment from \"moment\"\nimport \"./Message.css\"\n\nexport const Message = (props: any) => {\n    const {data, isMine, startsSequence, endsSequence, showTimestamp} = props\n\n    const friendlyTimestamp = moment(data.timestamp).format(\"LLLL\")\n    return (\n        <div\n            className={[\n                \"message\",\n                `${isMine ? \"mine\" : \"\"}`,\n                `${startsSequence ? \"start\" : \"\"}`,\n                `${endsSequence ? \"end\" : \"\"}`,\n            ].join(\" \")}\n        >\n            {showTimestamp && <div className=\"timestamp\">{friendlyTimestamp}</div>}\n\n            <div className=\"bubble-container\">\n                <div className=\"bubble\" title={friendlyTimestamp}>\n                    {data.message}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport \"./Compose.css\"\n\nexport const Compose = (props: any) => {\n    return (\n        <div className=\"compose\">\n            <input\n                type=\"text\"\n                className=\"compose-input\"\n                placeholder=\"Type a message, @name\"\n            />\n\n            {props.rightItems}\n        </div>\n    )\n}\n","import React, {useEffect, useState} from \"react\"\nimport {Toolbar} from \"../Toolbar/Toolbar\"\nimport {ToolbarButton} from \"../ToolbarButton/ToolbarButton\"\nimport {Message} from \"../Message/Message\"\nimport moment from \"moment\"\n\nimport \"./MessageList.css\"\nimport {Compose} from \"../Compose/Compose\"\n\nconst MY_USER_ID = \"apple\"\n\nexport const MessageList = (props: any) => {\n    const [messages, setMessages] = useState([])\n\n    useEffect(() => {\n        getMessages()\n    })\n\n    const getMessages = () => {\n        var tempMessages = [\n            {\n                id: 1,\n                author: \"apple\",\n                message:\n                    \"Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.\",\n                timestamp: new Date().getTime(),\n            },\n            {\n                id: 2,\n                author: \"orange\",\n                message:\n                    \"It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!\",\n                timestamp: new Date().getTime(),\n            },\n            {\n                id: 3,\n                author: \"orange\",\n                message:\n                    \"Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.\",\n                timestamp: new Date().getTime(),\n            },\n            {\n                id: 4,\n                author: \"apple\",\n                message:\n                    \"It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!\",\n                timestamp: new Date().getTime(),\n            },\n            {\n                id: 5,\n                author: \"apple\",\n                message:\n                    \"Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.\",\n                timestamp: new Date().getTime(),\n            },\n            {\n                id: 6,\n                author: \"apple\",\n                message:\n                    \"It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!\",\n                timestamp: new Date().getTime(),\n            },\n            {\n                id: 7,\n                author: \"orange\",\n                message:\n                    \"Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.\",\n                timestamp: new Date().getTime(),\n            },\n            {\n                id: 8,\n                author: \"orange\",\n                message:\n                    \"It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!\",\n                timestamp: new Date().getTime(),\n            },\n            {\n                id: 9,\n                author: \"apple\",\n                message:\n                    \"Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.\",\n                timestamp: new Date().getTime(),\n            },\n            {\n                id: 10,\n                author: \"orange\",\n                message:\n                    \"It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!\",\n                timestamp: new Date().getTime(),\n            },\n        ]\n        // @ts-ignore\n        setMessages([...messages, ...tempMessages])\n    }\n\n    const renderMessages = () => {\n        let i = 0\n        let messageCount = messages.length\n        let tempMessages = []\n\n        while (i < messageCount) {\n            let previous = messages[i - 1]\n            let current = messages[i]\n            let next = messages[i + 1]\n            // @ts-ignore\n            let isMine = current.author === MY_USER_ID\n            // @ts-ignore\n            let currentMoment = moment(current.timestamp)\n            let prevBySameAuthor = false\n            let nextBySameAuthor = false\n            let startsSequence = true\n            let endsSequence = true\n            let showTimestamp = true\n\n            if (previous) {\n                // @ts-ignore\n                let previousMoment = moment(previous.timestamp)\n                let previousDuration = moment.duration(\n                    currentMoment.diff(previousMoment),\n                )\n                // @ts-ignore\n                prevBySameAuthor = previous.author === current.author\n\n                if (prevBySameAuthor && previousDuration.as(\"hours\") < 1) {\n                    startsSequence = false\n                }\n\n                if (previousDuration.as(\"hours\") < 1) {\n                    showTimestamp = false\n                }\n            }\n\n            if (next) {\n                // @ts-ignore\n                let nextMoment = moment(next.timestamp)\n                let nextDuration = moment.duration(nextMoment.diff(currentMoment))\n                // @ts-ignore\n                nextBySameAuthor = next.author === current.author\n\n                if (nextBySameAuthor && nextDuration.as(\"hours\") < 1) {\n                    endsSequence = false\n                }\n            }\n\n            tempMessages.push(\n                <Message\n                    key={i}\n                    isMine={isMine}\n                    startsSequence={startsSequence}\n                    endsSequence={endsSequence}\n                    showTimestamp={showTimestamp}\n                    data={current}\n                />,\n            )\n\n            // Proceed to the next message.\n            i += 1\n        }\n\n        return tempMessages\n    }\n\n    return (\n        <div className=\"message-list\">\n            <Toolbar\n                title=\"Conversation Title\"\n                rightItems={[\n                    <ToolbarButton\n                        key=\"info\"\n                        icon=\"ion-ios-information-circle-outline\"\n                    />,\n                    <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n                    <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />,\n                ]}\n            />\n\n            <div className=\"message-list-container\">{renderMessages()}</div>\n\n            <Compose\n                rightItems={[\n                    <ToolbarButton key=\"photo\" icon=\"ion-ios-camera\" />,\n                    <ToolbarButton key=\"image\" icon=\"ion-ios-image\" />,\n                    <ToolbarButton key=\"audio\" icon=\"ion-ios-mic\" />,\n                    <ToolbarButton key=\"money\" icon=\"ion-ios-card\" />,\n                    <ToolbarButton key=\"games\" icon=\"ion-logo-game-controller-b\" />,\n                    <ToolbarButton key=\"emoji\" icon=\"ion-ios-happy\" />,\n                ]}\n            />\n        </div>\n    )\n}\n","import React from \"react\"\nimport {ConversationsList} from \"../ConversationList/ConversationsList\"\nimport {MessageList} from \"../MessageList/MessageList\"\n\nimport \"./Messenger.css\"\n\nexport const Messenger = (props: any) => {\n    return (\n        <div className=\"messenger\">\n            {/* <Toolbar\n          title=\"Messenger\"\n          leftItems={[\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n          ]}\n          rightItems={[\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n          ]}\n        /> */}\n\n            {/* <Toolbar\n          title=\"Conversation Title\"\n          rightItems={[\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n          ]}\n        /> */}\n\n            <div className=\"scrollable sidebar\">\n                <ConversationsList />\n            </div>\n\n            <div className=\"scrollable content\">\n                <MessageList />\n            </div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport {observer} from \"mobx-react-lite\"\n// import {AuthStore} from \"../../stores/AuthStore\"\n\n\nexport const Registration = observer(() => {\n\n    // const authStore = new AuthStore()\n\n\n    const [phoneNumber, setPhoneNumber] = React.useState(\"\")\n    const [email, setEmail] = React.useState(\"\")\n    const [name, setName] = React.useState(\"\")\n    const [password, setPassword] = React.useState(\"\")\n    // const [input, setInput] = React.useState(\"\")\n    // const [input, setInput] = React.useState(\"\")\n    const [registrationFormFields, setRegistrationFormFields] = React.useState([])\n    // console.log(registrationFormFields, \"form fields\")\n\n\n    const handleFormSubmit = (event: any) => {\n        event.preventDefault()\n\n        // @ts-ignore\n        setRegistrationFormFields([...registrationFormFields, phoneNumber, email, name, password])\n        // authStore.registration(registrationFormFields)\n\n        // console.log(email, name, password, \"inside form\")\n    }\n\n\n    return (\n        <form onSubmit={handleFormSubmit}>\n            <label>\n                Phone Number:\n                <input type=\"text\" value={phoneNumber} onChange={(event) => setPhoneNumber(event.target.value)}\n                       placeholder={\"Enter your phone number\"} />\n            </label>\n            <label>\n                Email:\n                <input type=\"text\" value={email} onChange={(event => setEmail(event.target.value))}\n                       placeholder={\"Enter your E-MAIL\"} />\n            </label>\n\n            <label>\n                Name:\n                <input type=\"text\" value={name} onChange={event => setName(event.target.value)}\n                       placeholder={\"Enter your name\"} />\n            </label>\n            <label>\n                Password:\n                <input type=\"text\" value={password} onChange={event => setPassword(event.target.value)}\n                       placeholder={\"Enter your E-MAIL\"} />\n            </label>\n            <input type=\"submit\" value=\"submit\" />\n\n        </form>\n    )\n})\n","import React from \"react\"\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\"\nimport {Messenger} from \"../Messenger/Messenger\"\nimport {Registration} from \"../../pages/Registration/Registration\"\n\nexport default function App() {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/\" component={Messenger} />\n                    <Route exact path=\"/registration\" component={Registration} />\n\n                </Switch>\n            </BrowserRouter>\n\n        </div>\n    )\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./assets/index.css\"\nimport {BrowserRouter} from \"react-router-dom\"\nimport App from \"./components/App/App\"\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\"),\n)\n\n\n"],"sourceRoot":""}